[tox]
minversion = 4.8.0
envlist =
    lint
    docs
    packaging
    dockerfile
    # keep only N,N-1 ansible versions
    py{310,311,312}
    py{310,311,312}-{devel}

# do not enable skip missing to avoid CI false positives
skip_missing_interpreters = False
isolated_build = True

requires =
    pip >= 2.20.3

[testenv]
usedevelop = True
# do not put * in passenv as it may break builds do to reduced isolation
passenv =
    CI
    CONTAINER_*
    DOCKER_*
    GITHUB_*
    HOME
    PIP_*
    PODMAN_*
    PUBLISH
    PYTEST_*
    SSH_AUTH_SOCK
    TERM
setenv =
    ANSIBLE_CONFIG={toxinidir}/.ansible.cfg
    ANSIBLE_CALLABLE_WHITELIST={env:ANSIBLE_CALLABLE_WHITELIST:timer,profile_roles}
    ANSIBLE_DISPLAY_FAILED_STDERR=1
    ANSIBLE_VERBOSITY=1
    MOLECULE_NO_LOG=0
    PYTHONDONTWRITEBYTECODE=1
    PYTHONUNBUFFERED=1
    _EXTRAS=-l --cov=molecule --no-cov-on-fail --cov-report xml:{envlogdir}/coverage.xml --html={envlogdir}/reports.html --self-contained-html
deps =
    devel: ansible-core @ git+https://github.com/ansible/ansible.git  # GPLv3+
    dockerfile: ansible>=2.14.0
    ; selinux
extras =
    docker
    lint
    podman
    test
    windows
; commands_pre =
;     find {toxinidir} -type f -not -path '{toxinidir}/.tox/*' -path '*/__pycache__/*' -name '*.py[c|o]' -delete
;     sh -c 'find {homedir}/.cache -type d -path "*/molecule_*" -exec rm -rfv \{\} +;'
commands =
    ansibledevel: ansible-galaxy install git+https://github.com/ansible-collections/community.general.git
    # failsafe as pip may install incompatible dependencies
    pip check
    # failsafe for preventing changes that may break pytest collection
    sh -c "PYTEST_ADDOPTS= python -m pytest -p no:cov --collect-only 2>&1 >{envlogdir}/collect.log"
    # -n auto used only on unit as is not supported by functional yet
    # html report is used by Zuul CI to display reports
    python -m pytest molecule/test/unit/ {env:_EXTRAS} {env:PYTEST_ADDOPTS:} {posargs}


whitelist_externals =
    find
    rm
    sh

[testenv:lint]
description = Runs all linting tasks
commands =
    # to run a single linter you can do "pre-commit run flake8"
    python -m pre_commit run {posargs:--all}
deps = pre-commit>=1.18.1
extras =
skip_install = true
usedevelop = false

[testenv:docs]
description = Invoke sphinx-build to build the HTML docs
# doc requires py3 due to use of f'' strings and using only python3 as
# basepython risks using python3.4 which is not supported.
basepython = python3
passenv = *
usedevelop = False
commands =
    python -m sphinx \
      -a -n -W \
      -b html --color \
      -d "{toxinidir}/docs/docstree" \
      docs/ "{toxinidir}/docs/docstree/html"

    # Print out the output docs dir and a way to serve html:
    python -c \
    'import pathlib; '\
    'docs_dir = pathlib.Path(r"{toxinidir}") / "docs/docstree/html"; index_file = docs_dir / "index.html"; print(f"\nDocumentation available under `file://\{index_file\}`\n\nTo serve docs, use `python3 -m http.server --directory \{docs_dir\} 0`\n")'
extras =
    docs

[testenv:docs-livereload]
description = Invoke sphinx-autobuild to build and reload the HTML docs
basepython = {[testenv:docs]basepython}
passenv = {[testenv:docs]passenv}
usedevelop = {[testenv:docs]usedevelop}
commands =
    python -m sphinx_autobuild docs/ "{toxworkdir}/docs/html"
deps =
    sphinx-autobuild>=0.7.1,<1.0
extras =
    docs

[testenv:packaging]
description =
    Do packaging/distribution. If tag is not present or PEP440 compliant upload to
    PYPI could fail
# `usedevelop = true` overrides `skip_install` instruction, it's unwanted
usedevelop = false
# don't install molecule itself in this env
skip_install = true
deps =
    collective.checkdocs >= 0.2
    pep517 >= 0.8.2
    pip >= 20.2.2
    toml >= 0.10.1
    twine >= 3.2.0  # pyup: ignore
setenv =
commands =
    rm -rfv {toxinidir}/dist/
    python -m pep517.build \
      --source \
      --binary \
      --out-dir {toxinidir}/dist/ \
      {toxinidir}
    # metadata validation
    sh -c "python -m twine check {toxinidir}//dist/*"
    # validate collection building
    sh -c "cd collection && make"
